#extend("base"):
    #export("body"):
        <div class="max-w-4xl mx-auto">
            <!-- Header Section -->
            <div class="flex justify-between items-center mb-8">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Todo List</h1>
                    <p class="text-gray-600 dark:text-gray-300 mt-2">Manage your tasks efficiently</p>
                </div>
                <button id="add-todo-btn" class="inline-flex items-center px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-md transition-colors">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Add Todo
                </button>
            </div>

            <!-- Add Todo Form (Initially Hidden) -->
            <div id="add-todo-form" class="hidden mb-8">
                <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-700">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Add New Todo</h3>
                    <form id="todo-form" class="space-y-4">
                        <div>
                            <label for="title" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                Title
                            </label>
                            <input type="text" 
                                   id="title" 
                                   name="title" 
                                   required
                                   class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
                                   placeholder="Enter todo title...">
                        </div>
                        <div class="flex space-x-3">
                            <button type="submit" 
                                    class="inline-flex items-center px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-md transition-colors">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                Add Todo
                            </button>
                            <button type="button" 
                                    id="cancel-add-btn"
                                    class="inline-flex items-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-md transition-colors">
                                Cancel
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Todos List -->
            <div class="space-y-4">
                #if(todos):
                    #for(todo in todos):
                        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-700 todo-item" data-id="#(todo.id)">
                            <div class="flex items-center justify-between">
                                <div class="flex-1">
                                    <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                                        #(todo.title)
                                    </h3>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <button class="delete-todo-btn p-2 text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-md transition-colors"
                                            data-id="#(todo.id)"
                                            title="Delete todo">
                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                    #endfor
                #else:
                    <div class="text-center py-12">
                        <svg class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                        <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No todos</h3>
                        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by creating a new todo.</p>
                        <div class="mt-6">
                            <button id="empty-state-add-btn" class="inline-flex items-center px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white font-medium rounded-md transition-colors">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                </svg>
                                Add your first todo
                            </button>
                        </div>
                    </div>
                #endif
            </div>
        </div>

        <!-- JavaScript for Todo Management -->
        <script>
            // Show/hide add todo form
            document.getElementById('add-todo-btn').addEventListener('click', function() {
                document.getElementById('add-todo-form').classList.remove('hidden');
                document.getElementById('title').focus();
            });

            document.getElementById('empty-state-add-btn')?.addEventListener('click', function() {
                document.getElementById('add-todo-form').classList.remove('hidden');
                document.getElementById('title').focus();
            });

            document.getElementById('cancel-add-btn').addEventListener('click', function() {
                document.getElementById('add-todo-form').classList.add('hidden');
                document.getElementById('todo-form').reset();
            });

            // Handle form submission
            document.getElementById('todo-form').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(e.target);
                const title = formData.get('title');
                
                if (!title.trim()) {
                    alert('Please enter a todo title');
                    return;
                }

                try {
                    const response = await fetch('/todos', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ title: title.trim() })
                    });

                    if (response.ok) {
                        // Reload the page to show the new todo
                        window.location.reload();
                    } else {
                        alert('Failed to add todo');
                    }
                } catch (error) {
                    console.error('Error adding todo:', error);
                    alert('Failed to add todo');
                }
            });

            // Handle delete buttons
            document.querySelectorAll('.delete-todo-btn').forEach(button => {
                button.addEventListener('click', async function() {
                    const todoId = this.dataset.id;
                    
                    if (!confirm('Are you sure you want to delete this todo?')) {
                        return;
                    }

                    try {
                        const response = await fetch(`/todos/${todoId}`, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            // Remove the todo item from the DOM
                            const todoItem = document.querySelector(`.todo-item[data-id="${todoId}"]`);
                            todoItem.remove();
                            
                            // If no todos left, reload to show empty state
                            if (document.querySelectorAll('.todo-item').length === 0) {
                                window.location.reload();
                            }
                        } else {
                            alert('Failed to delete todo');
                        }
                    } catch (error) {
                        console.error('Error deleting todo:', error);
                        alert('Failed to delete todo');
                    }
                });
            });
        </script>
    #endexport
#endextend 